name: Deploy API

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore
        
      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Run tests
        run: dotnet test --no-build --verbosity normal || true
        
      - name: Publish
        run: dotnet publish --configuration Release --output ./publish

      - name: List publish directory content
        run: ls -la ./publish
        
      - name: Deploy to VPS
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "publish/,docker-compose.yml"
          target: "/home/${{ secrets.USERNAME }}/api"
          strip_components: 0
          overwrite: true

      - name: Restart API container
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@master
        env:
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          AZURE_STORAGE_CONNECTION: ${{ secrets.AZURE_STORAGE_CONNECTION }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: DB_PASSWORD,AZURE_STORAGE_CONNECTION
          script: |
            cd ~/api
            echo "DB_PASSWORD='$DB_PASSWORD'" > .env
            echo "AZURE_STORAGE_CONNECTION='$AZURE_STORAGE_CONNECTION'" >> .env
            chmod 600 .env
            docker rm -f dotnet_api || true
            docker-compose build --no-cache
            docker-compose up -d api